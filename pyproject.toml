[tool.poetry]
name = "dog-walk-app"
version = "0.1.0"
description = ""
authors = ["bobunist <92374148+bobunist@users.noreply.github.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.0"
python-dotenv = "^1.0.1"
sqlalchemy = "^2.0.35"
alembic = "^1.13.2"
asyncpg = "^0.29.0"
gunicorn = "^23.0.0"
uvicorn = "^0.30.6"
pydantic-settings = "^2.5.2"
uvloop = { version = "^0.20.0", markers = "sys_platform == 'linux'" }
orjson = "^3.10.7"
httptools = "^0.6.1"
tzdata = "^2024.1"
sqlmodel = "^0.0.22"
singleton-package = "^0.6.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.6.4"
nitpick = "^0.35.0"
pre-commit = "^3.8.0"


[tool.poetry.group.test.dependencies]
pytest = "^8.3.2"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
pytest-env = "^1.1.3"
pytest-sugar = "^1.0.0"
faker = "^29.0.0"
httpx = "^0.27.2"

[tool.pytest.ini_options]
filterwarnings = "ignore::DeprecationWarning:pytest_asyncio"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "module"
env = [
  "MODE=TEST",
  "POSTGRES_USER=postgres",
  "POSTGRES_PASSWORD=postgres",
  "POSTGRES_HOST=localhost",
  "POSTGRES_PORT=5432",
  "POSTGRES_NAME=test_dog_walk_app",
]
testpaths = ["tests"]
python_files = "test*.py"
addopts = "-rsxX -l --tb=short --strict-markers --doctest-modules"
xfail_strict = "true"

[tool.ruff]
src = ["src", "test"]
line-length = 89
show-fixes = true
include = ["**/app/**.py", "**/src/**.py", "**/tests/**.py"]
exclude = [".yaml", ".yml"]

[tool.ruff.lint]
select = ["ANN", "B", "C4", "COM", "D", "E", "F", "FAST", "G", "I", "PT", "Q", "R", "RET", "SIM", "T20", "UP", "W"]
ignore = ["ANN101", "D203", "D212", "ANN204", "RET504", "D100", "D104"]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = []
"tests/**.py" = ["ANN201", "D103", "S101", "PT004", "PT014"]
"**exception**.py" = ["D102"]
"**/models/**" = ["F821"]
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.nitpick]
style = [
  "nitpick/all.toml",
]
